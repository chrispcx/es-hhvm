namespace carbon::test;

import "mcrouter/lib/carbon/test/a/A.idl"
import "mcrouter/lib/network/Common.idl"

request TestRequest with 1: SimpleStruct as Base {
  id: 3;
  name: "test";
  reply: TestReply;

  1: Keys<IOBuf> key;
  2: test2::util::SimpleEnum testEnum;
  3: bool testBool;
  4: char testChar;
  5: int8_t testInt8;
  6: int16_t testInt16;
  7: int32_t testInt32;
  8: int64_t testInt64;
  9: uint8_t testUInt8;
  10: uint16_t testUInt16;
  11: uint32_t testUInt32;
  12: uint64_t testUInt64;
  13: float testFloat;
  14: double testDouble;
  15: string testShortString;
  16: string testLongString;
  17: IOBuf testIobuf;
  18: SimpleStruct testStruct;
  19: vector<string> testList;
  20: Optional<string> testOptionalString;
  21: Optional<IOBuf> testOptionalIobuf;
  22: vector<test2::util::SimpleEnum> testEnumVec;
};

reply TestReply {
  1: Result result;
};

request TestRequestStringKey {
  id: 4;
  name: "testStringKey";
  reply: TestReplyStringKey;

  1: Keys<string> key;
};

reply TestReplyStringKey {
  1: Result result;
};

service {
  additional_requests: [AnotherRequest, carbon::test2::util::YetAnotherRequest];
  enable_shutdown: true;
};
