{{!

  Copyright 2016 Facebook, Inc.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.

}}{{!

Generates a top-level file to be imported in the user's service code. It provides
wrappers for each of the service handlers that the user is then able to extend.

The generated file is pretty big, but the bulk of the generation is done inside
the CythonPromises and ServiceCallbacks partials.

}}
{{> AutoGeneratedPy}}

from libcpp.memory cimport shared_ptr, make_shared, unique_ptr, make_unique
from libcpp.string cimport string
from libcpp cimport bool as cbool
from cpython cimport bool as pbool
from libc.stdint cimport int8_t, int16_t, int32_t, int64_t
from libcpp.vector cimport vector
from libcpp.set cimport set as cset
from libcpp.map cimport map as cmap
from cython.operator cimport dereference as deref
from cpython.ref cimport PyObject
from thrift.lib.py3.thrift_server cimport (
  ServiceInterface,
  cTApplicationException
)
from folly_futures cimport cFollyPromise, cFollyUnit, c_unit

import asyncio
import functools
import sys
import traceback

{{#program:structs}}
{{#first?}}from {{program:name}}_types cimport (
    move,{{/first?}}
    {{struct:name}},
    c{{struct:name}}{{^last?}},{{/last?}}{{#last?}}
){{/last?}}{{/program:structs}}
{{#program:enums}}
{{#first?}}from {{program:name}}_types cimport ({{/first?}}
    c{{enum:name}},
    {{enum:name}}_to_cpp,
    {{#enum:values}}
    {{enum:name}}__{{enumValue:name}}{{^last?}},{{/last?}}
{{/enum:values}}{{^last?}},{{/last?}}{{#last?}}
){{/last?}}{{/program:enums}}
{{#program:enums}}
{{#first?}}from {{program:name}}_types import ({{/first?}}
    {{enum:name}}{{^last?}},{{/last?}}{{#last?}}
){{/last?}}{{/program:enums}}
{{#program:containerTypes}}
{{#first?}}from {{program:name}}_types cimport (
    {{/first?}}
    {{type:flat_name}}{{^last?}},{{/last?}}{{#last?}}
){{/last?}}
{{/program:containerTypes}}

{{#program:services}}
from {{program:name}}_services_wrapper cimport c{{service:name}}Interface
{{/program:services}}

{{> CythonPromises}}
{{> ServiceCallbacks}}

{{#program:services}}
cdef class {{service:name}}Interface(ServiceInterface):
    def __cinit__(self):
        self.interface_wrapper = c{{service:name}}Interface(<PyObject *> self)

    def __init__(self, loop=None):
        self.loop = loop or asyncio.get_event_loop()

    {{#service:functions}}
    async def {{function:name}}(
            self{{#function:args}},
            {{field:name}}{{/function:args}}):
        raise NotImplementedError("async def {{function:name}} is not implemented")


    {{/service:functions}}
{{/program:services}}
