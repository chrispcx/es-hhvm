/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "thrift/compiler/test/fixtures/refs/gen-cpp/module2_reflection.h"
#include <thrift/lib/cpp/Reflection.h>

 namespace module2_reflection_ {

// Reflection initializer for struct includes.Included
void reflectionInitializer_16202005076139393548(::apache::thrift::reflection::Schema& schema) {
  const uint64_t id = 16202005076139393548U;
  if (schema.dataTypes.count(id)) return;
  ::apache::thrift::reflection::DataType& dt = schema.dataTypes[id];
  dt.name = "struct includes.Included";
  schema.names[dt.name] = id;
  dt.__isset.fields = true;
  {
    ::apache::thrift::reflection::StructField& f = dt.fields[1];
    f.isRequired = true;
    f.type = 4U;
    f.name = "some_val";
    f.order = 0;
  }
}

void  reflectionInitializer_16202005076139393548(::apache::thrift::reflection::Schema&);  // struct includes.Included
// Reflection initializer for struct module2.StructUsingOtherNamespace
void reflectionInitializer_8285996275179549516(::apache::thrift::reflection::Schema& schema) {
  const uint64_t id = 8285996275179549516U;
  if (schema.dataTypes.count(id)) return;
  ::apache::thrift::reflection::DataType& dt = schema.dataTypes[id];
  dt.name = "struct module2.StructUsingOtherNamespace";
  schema.names[dt.name] = id;
  dt.__isset.fields = true;
  {
    ::apache::thrift::reflection::StructField& f = dt.fields[1];
    f.isRequired = false;
    f.type = 16202005076139393548U;
    f.name = "other";
    f.order = 0;
    f.__isset.annotations = true;
    f.annotations["cpp.ref"] = "true";
    f.annotations["cpp2.ref"] = "true";
  }
  reflectionInitializer_16202005076139393548(schema);  // struct includes.Included
}

}

