/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#pragma once

#include "thrift/compiler/test/fixtures/lean_mean_meta_machine/gen-cpp2/module_types.h"
#include <thrift/lib/cpp2/protocol/Protocol.h>
namespace test_cpp2 { namespace cpp_reflection {

struct module_constants {

  static constexpr int32_t const constant1_ = 1357;

  static constexpr int32_t constant1() {
    return constant1_;
  }

  // consider using folly::StringPiece instead of std::string whenever possible
  // to referencing this statically allocated string constant, in order to
  // prevent unnecessary allocations

  static constexpr char const * const constant2_ = "hello";

  static constexpr char const * constant2() {
    return constant2_;
  }

  static constexpr  ::test_cpp2::cpp_reflection::enum1 const constant3_ =  ::test_cpp2::cpp_reflection::enum1::field0;

  static constexpr  ::test_cpp2::cpp_reflection::enum1 constant3() {
    return constant3_;
  }

  static constexpr int32_t const constant_with_special_name_ = 42;

  static constexpr int32_t constant_with_special_name() {
    return constant_with_special_name_;
  }

};

}} // test_cpp2::cpp_reflection
