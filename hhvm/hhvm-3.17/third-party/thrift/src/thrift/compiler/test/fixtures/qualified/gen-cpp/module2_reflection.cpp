/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#include "thrift/compiler/test/fixtures/qualified/gen-cpp/module2_reflection.h"
#include <thrift/lib/cpp/Reflection.h>

namespace MODULE2 { namespace module2_reflection_ {

// Reflection initializer for struct module0.Struct
void reflectionInitializer_11424233335995828524(::apache::thrift::reflection::Schema& schema) {
  const uint64_t id = 11424233335995828524U;
  if (schema.dataTypes.count(id)) return;
  ::apache::thrift::reflection::DataType& dt = schema.dataTypes[id];
  dt.name = "struct module0.Struct";
  schema.names[dt.name] = id;
  dt.__isset.fields = true;
  {
    ::apache::thrift::reflection::StructField& f = dt.fields[1];
    f.isRequired = true;
    f.type = 5U;
    f.name = "first";
    f.order = 0;
  }
  {
    ::apache::thrift::reflection::StructField& f = dt.fields[2];
    f.isRequired = true;
    f.type = 1U;
    f.name = "second";
    f.order = 1;
  }
}

// Reflection initializer for struct module1.Struct
void reflectionInitializer_18368202441649123916(::apache::thrift::reflection::Schema& schema) {
  const uint64_t id = 18368202441649123916U;
  if (schema.dataTypes.count(id)) return;
  ::apache::thrift::reflection::DataType& dt = schema.dataTypes[id];
  dt.name = "struct module1.Struct";
  schema.names[dt.name] = id;
  dt.__isset.fields = true;
  {
    ::apache::thrift::reflection::StructField& f = dt.fields[1];
    f.isRequired = true;
    f.type = 5U;
    f.name = "first";
    f.order = 0;
  }
  {
    ::apache::thrift::reflection::StructField& f = dt.fields[2];
    f.isRequired = true;
    f.type = 1U;
    f.name = "second";
    f.order = 1;
  }
}

void  reflectionInitializer_11424233335995828524(::apache::thrift::reflection::Schema&);  // struct module0.Struct
void  reflectionInitializer_18368202441649123916(::apache::thrift::reflection::Schema&);  // struct module1.Struct
// Reflection initializer for struct module2.Struct
void reflectionInitializer_6048788120110564236(::apache::thrift::reflection::Schema& schema) {
  const uint64_t id = 6048788120110564236U;
  if (schema.dataTypes.count(id)) return;
  ::apache::thrift::reflection::DataType& dt = schema.dataTypes[id];
  dt.name = "struct module2.Struct";
  schema.names[dt.name] = id;
  dt.__isset.fields = true;
  {
    ::apache::thrift::reflection::StructField& f = dt.fields[1];
    f.isRequired = true;
    f.type = 11424233335995828524U;
    f.name = "first";
    f.order = 0;
  }
  {
    ::apache::thrift::reflection::StructField& f = dt.fields[2];
    f.isRequired = true;
    f.type = 18368202441649123916U;
    f.name = "second";
    f.order = 1;
  }
  reflectionInitializer_11424233335995828524(schema);  // struct module0.Struct
  reflectionInitializer_18368202441649123916(schema);  // struct module1.Struct
}

void  reflectionInitializer_6048788120110564236(::apache::thrift::reflection::Schema&);  // struct module2.Struct
// Reflection initializer for struct module2.BigStruct
void reflectionInitializer_18288836959267843340(::apache::thrift::reflection::Schema& schema) {
  const uint64_t id = 18288836959267843340U;
  if (schema.dataTypes.count(id)) return;
  ::apache::thrift::reflection::DataType& dt = schema.dataTypes[id];
  dt.name = "struct module2.BigStruct";
  schema.names[dt.name] = id;
  dt.__isset.fields = true;
  {
    ::apache::thrift::reflection::StructField& f = dt.fields[1];
    f.isRequired = true;
    f.type = 6048788120110564236U;
    f.name = "s";
    f.order = 0;
  }
  {
    ::apache::thrift::reflection::StructField& f = dt.fields[2];
    f.isRequired = true;
    f.type = 5U;
    f.name = "id";
    f.order = 1;
  }
  reflectionInitializer_6048788120110564236(schema);  // struct module2.Struct
}

}} // namespace

